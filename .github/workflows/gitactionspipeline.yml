# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
    
jobs:
  build:
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    name: Build 
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: false
      DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
      DOTNET_MULTILEVEL_LOOKUP: 0
 
    steps:
    - uses: actions/checkout@v2      
    - name: nuget restore
      uses: nuget/setup-nuget@v1
      with:
        #nuget-api-key: ${{ secrets.NuGetAPIKey }}
        nuget-version: '5.x'
    - run: nuget restore PartsUnlimited-aspnet45/PartsUnlimited.sln
    
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
 
    - name: Restore
      run: dotnet restore PartsUnlimited-aspnet45/*
 
    - name: Build
      run: dotnet build PartsUnlimited-aspnet45/* --configuration Release --no-restore
 
    - name: Test
      run: dotnet test
      
